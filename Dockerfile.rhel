# Copyright (c) 2017-present Sonatype, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM registry.access.redhat.com/rhel7/rhel

MAINTAINER Sonatype <cloud-ops@sonatype.com>

LABEL name="Nexus IQ Server image" \
  vendor=Sonatype \
  version="1.85.0-01" \
  release="1.85.0-01" \
  url="https://www.sonatype.com" \
  summary="The Nexus IQ Server" \
  description="Nexus IQ Server is a policy engine powered by precise intelligence on open source components. \
    It provides a number of tools to improve component usage in your software supply chain, allowing you to \
    automate your processes and achieve accelerated speed to delivery while also increasing product quality" \
  com.sonatype.license="Apache License, Version 2.0" \
  com.sonatype.name="Nexus IQ Server image" \
  run="docker run -d -p 8070:8070 -p 8071:8071 IMAGE" \
  com.sonatype.name="Nexus IQ Server base image" \
  io.k8s.description="Nexus IQ Server is a policy engine powered by precise intelligence on open source components. \
    It provides a number of tools to improve component usage in your software supply chain, allowing you to \
    automate your processes and achieve accelerated speed to delivery while also increasing product quality" \
  io.k8s.display-name="Nexus IQ Server" \
  io.openshift.expose-services="8071:8071" \
  io.openshift.tags="Sonatype,Nexus,IQ Server"

# Optional parameters.
ARG IQ_SERVER_VERSION=1.85.0-01
ARG IQ_SERVER_SHA256=31da4b11cb810c8f4551bdd3ff782953bfa4949c

# Mandatory parameters. Docker needs to know volume mount point and location of startup script.
ENV SONATYPE_WORK="/sonatype-work" \
    IQ_HOME="/opt/sonatype/nexus-iq-server/" \
    DOCKER_TYPE="rh-docker"

ARG IQ_SERVER_COOKBOOK_VERSION="release-0.4.20200219-224442.056dc0d"
ARG IQ_SERVER_COOKBOOK_URL="https://github.com/sonatype/chef-nexus-iq-server/releases/download/${IQ_SERVER_COOKBOOK_VERSION}/chef-nexus-iq-server.tar.gz"

ADD solo.json.erb /var/chef/solo.json.erb

# DEBUGGING - break up into multiple RUN lines. DO NOT COMMIT
# Chef version locked to avoid needing to accept the EULA on behalf of whomever builds the image
RUN curl -L https://www.getchef.com/chef/install.sh | bash -s -- -v 14.12.9
RUN /opt/chef/embedded/bin/erb /var/chef/solo.json.erb > /var/chef/solo.json
RUN chef-solo -l debug \
       --node-name foobar \
       --recipe-url ${IQ_SERVER_COOKBOOK_URL} \
       --json-attributes /var/chef/solo.json
RUN rpm -qa *chef* | xargs rpm -e
RUN rm -rf /etc/chef
RUN rm -rf /opt/chefdk
RUN rm -rf /var/cache/yum
RUN rm -rf /var/chef
RUN yum clean all

VOLUME ${SONATYPE_WORK}

EXPOSE 8070
EXPOSE 8071

USER nexus

ENV JAVA_OPTS="-Djava.util.prefs.userRoot=${SONATYPE_WORK}/javaprefs"

ENTRYPOINT ["/uid_entrypoint.sh"]
CMD ["sh", "-c", "${IQ_HOME}/start-nexus-iq-server.sh"]
